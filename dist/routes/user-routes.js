"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const user_controller_1 = require("../controllers/user-controller");
const user_service_1 = require("../services/user-service");
const user_repository_1 = require("../repositories/user-repository");
const auth_1 = require("../middlewares/auth");
const express_1 = __importDefault(require("express"));
const userRespository = new user_repository_1.UserRepository();
const userService = new user_service_1.UserService(userRespository);
const userController = new user_controller_1.UserController(userService);
const userRouter = express_1.default.Router();
userRouter.post("/login", userController.login);
userRouter.post("/sign-up", userController.signUp);
userRouter.post("/verify-otp", userController.verifyOtp);
userRouter.post("/create-profile", userController.createProfile);
userRouter.get("/profile", auth_1.protect, userController.userProfile);
userRouter.put("/edit-profile", auth_1.protect, userController.updateProfile);
userRouter.put("/change-password", auth_1.protect, userController.updatePassword);
userRouter.post("/forgot-password", userController.forgotPassword);
userRouter.post("/fpassword-otp/:email", userController.forgotPassswordOtpVerify);
userRouter.put("/reset-password", userController.resetPassword);
userRouter.post("/search-name", userController.searchName);
userRouter.get("/friend-profile", userController.friendProfile);
userRouter.post("/follow", auth_1.protect, userController.followProfile);
userRouter.post("/unFollow", auth_1.protect, userController.unFollowProfile);
userRouter.post("/blueTickConfirmed", auth_1.protect, userController.blueTickProceed);
userRouter.post("/create-new-chat", auth_1.protect, userController.createNewChat);
userRouter.get("/conversations", auth_1.protect, userController.getConversations);
userRouter.post("/sendMessage", auth_1.protect, userController.sendMessage);
userRouter.post("/getMessages", auth_1.protect, userController.getMessages);
userRouter.patch("/cancel-premium", auth_1.protect, userController.cancelPremium);
userRouter.post("/create-community", auth_1.protect, userController.createCommunity);
userRouter.get("/communities", auth_1.protect, userController.getCommunities);
userRouter.post("/communitySendMessage", auth_1.protect, userController.communitySendMessage);
userRouter.post("/getCommunityMessages", auth_1.protect, userController.getCommunityMessages);
userRouter.post("/add-user-to-community", auth_1.protect, userController.editCommunity);
userRouter.post("/remove-user-from-community", auth_1.protect, userController.removeUserFromCommunity);
userRouter.put("/edit-community-name", auth_1.protect, userController.editCommunityName);
userRouter.post("/unsend-message", auth_1.protect, userController.unsendMessage);
userRouter.post("/unsend-community-message", auth_1.protect, userController.unsendCommunityMessage);
userRouter.post("/exit-community", auth_1.protect, userController.exitCommunity);
userRouter.get("/get-notifications", auth_1.protect, userController.getNotifications);
userRouter.patch("/mark-as-read", auth_1.protect, userController.ReadNotification);
userRouter.put("/clearAllNotifications", auth_1.protect, userController.clearAllNotifications);
userRouter.post("/sell-new-product", auth_1.protect, userController.sellNewProduct);
userRouter.get("/fetch-products", userController.fetchProducts);
userRouter.get("/fetch-user-lists", auth_1.protect, userController.fetchUserLists);
userRouter.post("/mark-as-sold", auth_1.protect, userController.markAsSold);
userRouter.get("/fetch-replies/:commentId", userController.fetchReplies);
userRouter.post("/add-to-wishlist", auth_1.protect, userController.addToWishlist);
userRouter.get("/fetch-user-wishlist", auth_1.protect, userController.fetchUserWishlist);
userRouter.patch("/remove-from-wishlist", auth_1.protect, userController.removeFromWishlist);
exports.default = userRouter;
